// Set new default font family and font color to mimic Bootstrap's default styling
Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
Chart.defaults.global.defaultFontColor = '#858796';

function number_format(number, decimals, dec_point, thousands_sep) {
  // *     example: number_format(1234.56, 2, ',', ' ');
  // *     return: '1 234,56'
  number = (number + '').replace(',', '').replace(' ', '');
  var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
    s = '',
    toFixedFix = function(n, prec) {
      var k = Math.pow(10, prec);
      return '' + Math.round(n * k) / k;
    };
  // Fix for IE parseFloat(0.55).toFixed(0) = 0;
  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
  if (s[0].length > 3) {
    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
  }
  if ((s[1] || '').length < prec) {
    s[1] = s[1] || '';
    s[1] += new Array(prec - s[1].length + 1).join('0');
  }
  return s.join(dec);
}

// Area Chart Example
var ctx = document.getElementById('myLineChart');


   var myLineChart = new Chart(ctx, {
  type: 'line',
  data: {
    labels: ["2020-04-13T22:19:03", "2020-04-13T22:19:36", "2020-04-13T22:20:06", "2020-04-13T22:20:37", "2020-04-13T22:21:07", "2020-04-13T22:21:38", "2020-04-13T22:22:09", "2020-04-13T22:22:39", "2020-04-13T22:23:01", "2020-04-13T22:23:31", "2020-04-13T22:24:02", "2020-04-13T22:24:32", "2020-04-13T22:25:03", "2020-04-13T22:25:33", "2020-04-13T22:26:04", "2020-04-13T22:26:34", "2020-04-13T22:27:05", "2020-04-13T22:27:35", "2020-04-13T22:28:06", "2020-04-13T22:28:36", "2020-04-13T22:29:07", "2020-04-13T22:29:37", "2020-04-13T22:30:08", "2020-04-13T22:30:39", "2020-04-13T22:31:09", "2020-04-13T22:31:40", "2020-04-13T22:32:11", "2020-04-13T22:32:41", "2020-04-13T22:33:12", "2020-04-13T22:33:42", "2020-04-13T22:34:13", "2020-04-13T22:34:43", "2020-04-13T22:35:14", "2020-04-13T22:35:44", "2020-04-13T22:36:15", "2020-04-13T22:36:45", "2020-04-13T22:37:16", "2020-04-13T22:37:46", "2020-04-13T22:38:17", "2020-04-13T22:38:48", "2020-04-13T22:39:18", "2020-04-13T22:39:49", "2020-04-13T22:40:19", "2020-04-13T22:40:29", "2020-04-13T22:40:59", "2020-04-13T22:41:30", "2020-04-13T22:42:02", "2020-04-13T22:42:33", "2020-04-13T22:43:03", "2020-04-13T22:43:34", "2020-04-13T22:43:42", "2020-04-13T22:44:12", "2020-04-13T22:44:43", "2020-04-13T22:45:13", "2020-04-13T22:45:44", "2020-04-13T22:46:14", "2020-04-13T22:46:45", "2020-04-13T22:47:15", "2020-04-13T22:47:46", "2020-04-13T22:48:16", "2020-04-13T22:48:47", "2020-04-13T22:49:19", "2020-05-11T19:23:09", "2020-05-11T19:23:40", "2020-05-11T19:24:01", "2020-05-11T19:24:32", "2020-05-11T19:25:02", "2020-05-11T19:25:33", "2020-05-11T19:26:04", "2020-05-11T19:26:34", "2020-05-11T19:27:05", "2020-05-11T19:27:35", "2020-05-11T19:28:06", "2020-05-11T19:28:36", "2020-05-11T19:29:07", "2020-05-11T19:29:37", "2020-05-11T19:30:08", "2020-05-11T19:30:38", "2020-05-11T19:31:09", "2020-05-11T19:31:39", "2020-05-11T19:32:10", "2020-05-11T19:32:40", "2020-05-11T19:33:11", "2020-05-11T19:33:42", "2020-05-11T19:34:12", "2020-05-11T19:34:43", "2020-05-11T19:35:13", "2020-05-11T19:35:44", "2020-05-11T19:36:15", "2020-05-11T19:36:45", "2020-05-11T19:37:16", "2020-05-11T19:37:46", "2020-05-11T19:38:17", "2020-05-11T19:38:47", "2020-05-11T19:39:18", "2020-05-11T19:39:48", "2020-05-11T19:40:19", "2020-05-11T19:40:49", "2020-05-11T19:41:20", "2020-05-11T19:41:50", "2020-05-11T19:42:21", "2020-05-11T19:42:51", "2020-05-11T19:43:22", "2020-05-11T19:43:53", "2020-05-11T19:44:23", "2020-05-11T19:44:54", "2020-05-11T19:45:24", "2020-05-11T19:45:55", "2020-05-11T19:46:26", "2020-05-11T19:46:56", "2020-05-11T19:47:27", "2020-05-11T19:47:57", "2020-05-11T19:48:28", "2020-05-11T19:48:58", "2020-05-11T19:49:29", "2020-05-11T19:49:59", "2020-05-11T19:50:30", "2020-05-11T19:51:00", "2020-05-11T19:51:31", "2020-05-11T19:52:01", "2020-05-11T19:52:32", "2020-05-11T19:53:02", "2020-05-11T19:53:33", "2020-05-11T19:54:04", "2020-05-11T19:54:34", "2020-05-11T19:55:05", "2020-05-11T19:55:35", "2020-05-11T19:56:06", "2020-05-11T19:56:37", "2020-05-11T19:57:07", "2020-05-11T19:57:38", "2020-05-11T19:58:08", "2020-05-11T19:58:39", "2020-05-11T19:59:09", "2020-05-11T19:59:40", "2020-05-11T20:00:10", "2020-05-11T20:00:41", "2020-05-11T20:01:11", "2020-05-11T20:01:42", "2020-05-11T20:02:12"],
    datasets: [{
      label: "Time Series Plot: smeter-3.kwh3",
      lineTension: 0.3,
      backgroundColor: "rgba(78, 115, 223, 0.05)",
      borderColor: "rgba(78, 115, 223, 1)",
      pointRadius: 3,
      pointBackgroundColor: "rgba(78, 115, 223, 1)",
      pointBorderColor: "rgba(78, 115, 223, 1)",
      pointHoverRadius: 3,
      pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
      pointHoverBorderColor: "rgba(78, 115, 223, 1)",
      pointHitRadius: 10,
      pointBorderWidth: 2,
      data: [3.7e-05, 0.001726, 0.00447, 0.007399, 0.010242, 0.012958, 0.015516, 0.017979, 0.003828, 0.006333, 0.008527, 0.01091, 0.01339, 0.01579, 0.018199, 0.020422, 0.022553, 0.02473, 0.026898, 0.029123, 0.031418, 0.033776, 0.036313, 0.038547, 0.041045, 0.043428, 0.046016, 0.048487, 0.05059, 0.052847, 0.055271, 0.057497, 0.059942, 0.06211, 0.064793, 0.067258, 0.069929, 0.072496, 0.074608, 0.07667, 0.07803, 0.079382, 0.08046, 0.004533, 0.005087, 0.005604, 0.005646, 0.006792, 0.00798, 0.008516, 0.003708, 0.005497, 0.007362, 0.008884, 0.010515, 0.012312, 0.014149, 0.005378, 0.006631, 0.008218, 0.009595, 0.009647, 0.003979, 0.00559, 0.003844, 0.00569, 0.007473, 0.009314, 0.01117, 0.012977, 0.014537, 0.016263, 0.018185, 0.020036, 0.021795, 0.023723, 0.025211, 0.026727, 0.028123, 0.029541, 0.03127, 0.032895, 0.03456, 0.036245, 0.037415, 0.038524, 0.039598, 0.040469, 0.041503, 0.042559, 0.043593, 0.044583, 0.045535, 0.046522, 0.047554, 0.048356, 0.049341, 0.05033, 0.051445, 0.052227, 0.053173, 0.05398, 0.05441, 0.055331, 0.056249, 0.057239, 0.058096, 0.058926, 0.059927, 0.060845, 0.061865, 0.062705, 0.063562, 0.064524, 0.065276, 0.06582, 0.066471, 0.067226, 0.068008, 0.068754, 0.069379, 0.070063, 0.070798, 0.071545, 0.072351, 0.072976, 0.073712, 0.074355, 0.075102, 0.075857, 0.076548, 0.077336, 0.077938, 0.078619, 0.079295, 0.079945, 0.080561, 0.081222, 0.081859, 0.082467],

    }],
  },
  options: {
    maintainAspectRatio: false,
    layout: {
      padding: {
        left: 10,
        right: 25,
        top: 25,
        bottom: 0
      }
    },
    scales: {
      xAxes: [{
        type: 'time',
        distribution: 'series',
        gridLines: {
          display: false,
          drawBorder: false
        },
        ticks: {
          source: 'auto'
        }
      }],
      yAxes: [{
        ticks: {
          maxTicksLimit: 5,
          padding: 10
        },
        gridLines: {
          color: "rgb(234, 236, 244)",
          zeroLineColor: "rgb(234, 236, 244)",
          drawBorder: false,
          borderDash: [2],
          zeroLineBorderDash: [2]
        }
      }],
    },
    legend: {
      display: false
    },
    tooltips: {
      backgroundColor: "rgb(255,255,255)",
      bodyFontColor: "#858796",
      titleMarginBottom: 10,
      titleFontColor: '#6e707e',
      titleFontSize: 14,
      borderColor: '#dddfeb',
      borderWidth: 1,
      xPadding: 15,
      yPadding: 15,
      displayColors: false,
      intersect: false,
      mode: 'index',
      caretPadding: 10,
      callbacks: {
        label: function(tooltipItem, chart) {
          var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
          return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + 'V';
        }
      }
    }
  }
});
